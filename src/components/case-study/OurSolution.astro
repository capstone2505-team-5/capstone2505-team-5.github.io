---
// Implementation.astro - Case Study Implementation Section
import Carousel from '../Carousel.astro';
const images: {
  src: string;
  alt: string;
  caption: string;
  type: 'image' | 'video';
}[] = [
  {
    src: '/images/WorkflowCarousel/1-SelectProjectNarrow.png',
    alt: 'Select Project',
    caption: 'This is and example of a caption for the photo of Alex. This is a long caption that should wrap around to the next line. It should keep wrapping around until the end of the next line and the next line and the next line and the next line.',
    type: 'image'
  },
  {
    src: '/images/WorkflowCarousel/2-CreateBatchScreenshotFODMAP.png',
    alt: 'Create Batch',
    caption: 'Choose a Phoenix project to get started analyzing',
    type: 'image'
  },
  {
    src: '/images/WorkflowCarousel/3-FastManualReview-10s-edit.mp4',
    alt: 'Fast Manual Review',
    caption: 'Filter, sort, and select the root spans you want to review',
    type: 'video'
  },
  {
    src: '/images/WorkflowCarousel/4-CategorizeInspectFast-10s-edit.mp4',
    alt: 'Categorize and Inspect',
    caption: 'Rate with a binary score and add freeform notes describing any errors found',
    type: 'video'
  },
  {
    src: '/images/WorkflowCarousel/5-InspectMutlipleBatch.png',
    alt: 'Inspect Multiple Batch',
    caption: 'Inspect multiple batches at once',
    type: 'image'
  }
  
]

---

<div class="case-study-content">
  <h3 id="introducing-llmonade">Introducing LLMonade</h3>
  <p>LLMonade is a free, lightweight, self-hosted platform that guides developers of LLM-powered applications through their first evaluations.  Our software is designed for small engineering teams that have already instrumented their application with Phoenix.  Traces are being collected, but the developers don’t know where to start assessing and improving the quality of their application.  LLMonade pulls traces from Phoenix and provides an annotation interface inspired by Hamel Husain’s recommendations.  Then, guides the developer through the most important evaluation activity, manual error analysis.</p>


  <div class="metrics-grid">
    <div class="metric-card">
      <div class="metric-icon">
        <img src="/icons/cli-icon.png" alt="CLI Icon" />
      </div>
      <div class="metric-label">Deployment Command Line Interface (CLI)</div>
      <div class="metric-description">Quickly deploys required infrastructure to AWS.</div>
    </div>
    
    <div class="metric-card">
      <div class="metric-icon">
        <img src="/icons/etl-icon.png" alt="ETL Icon" />
      </div>
      <div class="metric-label">Root Spans Extract, Transform, Load Pipeline (ETL)</div>
      <div class="metric-description">Automatically ingests root spans from Phoenix.</div>
    </div>
    
    <div class="metric-card">
      <div class="metric-icon">
        <img src="/icons/app-icon.svg" alt="App Icon" />
      </div>
      <div class="metric-label">Fullstack Error Analysis Web Application</div>
      <div class="metric-description">Guides error analysis on an ideal review interface</div>
    </div>
  </div>

  <h4>Deployment Command Line Interface</h4>
  <p>The deployment Command Line Interface (CLI) is a tool that automatically spins up all required infrastructure to Amazon Web Services. It utilizes AWS Cloud Development Kit (CDK) to provision and connect the entire architecture without any manual configuration. LLMonade is an ideal solution for small teams to get started quickly with a self-hosted, AI evaluation workflow.</p>
  
  <h4>Root Spans Extract, Transform, Load Pipeline</h4>
  <p>Looking at real application data is the foundation of manual error analysis.  LLMonade integrates seamlessly with the AI observability tool Phoenix.  Once deployed, the ETL pipeline automatically ingests existing traces from Phoenix and any new traces that get generated. The highest level spans, the root spans, are formatted and saved to a database. This guarantees that the latest application behavior is always available for error analysis and review in the web application.</p>


  <h3 id="fullstack-error-analysis-web-application">Fullstack Error Analysis Web Application</h3>
  <p>At the heart of LLMonade is a full-stack web application.  The application features a simplified error analysis workflow that walks developers through their first manual evaluations.  The error analysis is accomplished through an optimized human review interface. This facilitates the viewing, annotating, and analysis of their LLM-powered application outputs.</p>
  <Carousel media={images} title="Error Analysis Workflow"/>
  <p>LLMonade walks users through a simplified five step workflow to quickly get started evaluating their application. This simplified workflow reflects Hamel Husain’s best practices for error analysis.  The inspection results provide data driven targets for developers to focus on.  Progress through the workflow is visually tracked in a persistent footer. It highlights the current error analysis step and clearly indicates what comes next, ensuring users new to evaluations can navigate the process with ease. </p>


</div>


